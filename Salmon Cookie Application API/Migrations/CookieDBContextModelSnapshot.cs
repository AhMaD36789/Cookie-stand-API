// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Salmon_Cookie_Application_API.Data;

#nullable disable

namespace Salmon_Cookie_Application_API.Migrations
{
    [DbContext(typeof(CookieDBContext))]
    partial class CookieDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Salmon_Cookie_Application_API.Models.CookieStand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("AverageCookiesPerSale")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumCustomerPerHour")
                        .HasColumnType("int");

                    b.Property<int>("MinimumCustomerPerHour")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cookies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AverageCookiesPerSale = 2.5,
                            Description = "Since 1995",
                            Location = "Zarqa",
                            MaximumCustomerPerHour = 10,
                            MinimumCustomerPerHour = 3,
                            Owner = "Ahmad Mohsen"
                        });
                });

            modelBuilder.Entity("Salmon_Cookie_Application_API.Models.HourlySale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CookieStandID")
                        .HasColumnType("int");

                    b.Property<int>("SalePerHour")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CookieStandID");

                    b.ToTable("HourlySale");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CookieStandID = 1,
                            SalePerHour = 10
                        },
                        new
                        {
                            ID = 2,
                            CookieStandID = 1,
                            SalePerHour = 15
                        },
                        new
                        {
                            ID = 3,
                            CookieStandID = 1,
                            SalePerHour = 12
                        },
                        new
                        {
                            ID = 4,
                            CookieStandID = 1,
                            SalePerHour = 18
                        },
                        new
                        {
                            ID = 5,
                            CookieStandID = 1,
                            SalePerHour = 25
                        },
                        new
                        {
                            ID = 6,
                            CookieStandID = 1,
                            SalePerHour = 12
                        },
                        new
                        {
                            ID = 7,
                            CookieStandID = 1,
                            SalePerHour = 30
                        },
                        new
                        {
                            ID = 8,
                            CookieStandID = 1,
                            SalePerHour = 23
                        },
                        new
                        {
                            ID = 9,
                            CookieStandID = 1,
                            SalePerHour = 9
                        },
                        new
                        {
                            ID = 10,
                            CookieStandID = 1,
                            SalePerHour = 14
                        },
                        new
                        {
                            ID = 11,
                            CookieStandID = 1,
                            SalePerHour = 17
                        },
                        new
                        {
                            ID = 12,
                            CookieStandID = 1,
                            SalePerHour = 11
                        },
                        new
                        {
                            ID = 13,
                            CookieStandID = 1,
                            SalePerHour = 19
                        },
                        new
                        {
                            ID = 14,
                            CookieStandID = 1,
                            SalePerHour = 5
                        });
                });

            modelBuilder.Entity("Salmon_Cookie_Application_API.Models.HourlySale", b =>
                {
                    b.HasOne("Salmon_Cookie_Application_API.Models.CookieStand", "CookieStand")
                        .WithMany("HourlySales")
                        .HasForeignKey("CookieStandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CookieStand");
                });

            modelBuilder.Entity("Salmon_Cookie_Application_API.Models.CookieStand", b =>
                {
                    b.Navigation("HourlySales");
                });
#pragma warning restore 612, 618
        }
    }
}
